lesson 5, 6
php artisan make:model 'Model name' -m --> make model and migrate
php artisan migrate --> migrate file to database

lesson 12
$table->softDeletes();
use SoftDeletes;
withTrashed()->find(2);

lesson 13
firstOrCreate();
updateOrCreate();

lesson 14
 php artisan make:migration add_column_description_to_posts_table;
 php artisan migrate;
 php artisan migrate:rollback;
 $table->text('description')->nullable()->after('content');

 php artisan make:migration edit_column_content_to_posts_table;
 $table->renameColumn('post_content', 'content' );

 dropIfExists('table_name');


lesson 15, 16
@extends('layout.main')
@section('content') @endsection

@yield('content')

Route::get('/posts', [PostController::class, 'index'])->name('posts.index');

<li><a href="{{route('main.index')}}">main</a></li>


lesson 17
composer require laravel/ui
php artisan ui bootstrap
npm install
npm run dev

@vite(['resources/sass/app.scss', 'resources/js/app.js'])


lesson 18
@csrf -> when i  pass submit button i will in the store page
redirect()->route

lesson 19
return $this->hasMany(Post::class,  'category_id', 'id');
return $this->belongsTo(Category::class, 'category_id', 'id');


lesson 20
return $this->belongsToMany(Tag::class, 'post_tags', 'post_id','tag_id');

lesson 22
protected $guarded = false;

$tags = $data['tags'];
unset($data['tags']);
$post = Post::create($data);
$post->tags()->attach($tags);

$tags = $data['tags'];
        unset($data['tags']);

        $post->update($data);
        $post->tags()->sync($tags);
